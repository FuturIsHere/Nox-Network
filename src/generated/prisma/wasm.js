
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('./runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.10.1
 * Query Engine version: 9b628578b3b7cae625e8c927178f15a170e74a9c
 */
Prisma.prismaVersion = {
  client: "6.10.1",
  engine: "9b628578b3b7cae625e8c927178f15a170e74a9c"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  avatar: 'avatar',
  cover: 'cover',
  name: 'name',
  surname: 'surname',
  description: 'description',
  city: 'city',
  school: 'school',
  work: 'work',
  website: 'website',
  createdAt: 'createdAt',
  isOnline: 'isOnline',
  lastSeen: 'lastSeen'
};

exports.Prisma.PostScalarFieldEnum = {
  id: 'id',
  desc: 'desc',
  img: 'img',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  userId: 'userId'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  desc: 'desc',
  createdAt: 'createdAt',
  updateAt: 'updateAt',
  userId: 'userId',
  postId: 'postId',
  parentId: 'parentId'
};

exports.Prisma.LikeScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  userId: 'userId',
  postId: 'postId',
  commentId: 'commentId'
};

exports.Prisma.FollowerScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  followerId: 'followerId',
  followingId: 'followingId'
};

exports.Prisma.FollowRequestScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  senderId: 'senderId',
  receiverId: 'receiverId'
};

exports.Prisma.BlockScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  blockerId: 'blockerId',
  blockedId: 'blockedId'
};

exports.Prisma.StoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  img: 'img',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  message: 'message',
  read: 'read',
  createdAt: 'createdAt',
  userId: 'userId',
  triggeredById: 'triggeredById',
  postId: 'postId',
  commentId: 'commentId'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastMessageAt: 'lastMessageAt'
};

exports.Prisma.ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId',
  joinedAt: 'joinedAt',
  lastReadAt: 'lastReadAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  content: 'content',
  createdAt: 'createdAt',
  type: 'type',
  mediaUrl: 'mediaUrl',
  conversationId: 'conversationId',
  senderId: 'senderId'
};

exports.Prisma.DeletedConversationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  conversationId: 'conversationId',
  deletedAt: 'deletedAt'
};

exports.Prisma.MessageReadScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId',
  readAt: 'readAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  id: 'id',
  username: 'username',
  avatar: 'avatar',
  cover: 'cover',
  name: 'name',
  surname: 'surname',
  description: 'description',
  city: 'city',
  school: 'school',
  work: 'work',
  website: 'website'
};

exports.Prisma.PostOrderByRelevanceFieldEnum = {
  desc: 'desc',
  img: 'img',
  userId: 'userId'
};

exports.Prisma.CommentOrderByRelevanceFieldEnum = {
  desc: 'desc',
  userId: 'userId'
};

exports.Prisma.LikeOrderByRelevanceFieldEnum = {
  userId: 'userId'
};

exports.Prisma.FollowerOrderByRelevanceFieldEnum = {
  followerId: 'followerId',
  followingId: 'followingId'
};

exports.Prisma.FollowRequestOrderByRelevanceFieldEnum = {
  senderId: 'senderId',
  receiverId: 'receiverId'
};

exports.Prisma.BlockOrderByRelevanceFieldEnum = {
  blockerId: 'blockerId',
  blockedId: 'blockedId'
};

exports.Prisma.StoryOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  img: 'img'
};

exports.Prisma.NotificationOrderByRelevanceFieldEnum = {
  id: 'id',
  message: 'message',
  userId: 'userId',
  triggeredById: 'triggeredById'
};

exports.Prisma.ConversationOrderByRelevanceFieldEnum = {
  id: 'id'
};

exports.Prisma.ConversationParticipantOrderByRelevanceFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  userId: 'userId'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  id: 'id',
  content: 'content',
  mediaUrl: 'mediaUrl',
  conversationId: 'conversationId',
  senderId: 'senderId'
};

exports.Prisma.DeletedConversationOrderByRelevanceFieldEnum = {
  id: 'id',
  userId: 'userId',
  conversationId: 'conversationId'
};

exports.Prisma.MessageReadOrderByRelevanceFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  userId: 'userId'
};
exports.NotificationType = exports.$Enums.NotificationType = {
  LIKE: 'LIKE',
  COMMENT: 'COMMENT',
  FOLLOW: 'FOLLOW',
  FOLLOW_REQUEST: 'FOLLOW_REQUEST',
  MENTION: 'MENTION'
};

exports.MessageType = exports.$Enums.MessageType = {
  TEXT: 'TEXT',
  IMAGE: 'IMAGE',
  VIDEO: 'VIDEO'
};

exports.Prisma.ModelName = {
  User: 'User',
  Post: 'Post',
  Comment: 'Comment',
  Like: 'Like',
  Follower: 'Follower',
  FollowRequest: 'FollowRequest',
  Block: 'Block',
  Story: 'Story',
  Notification: 'Notification',
  Conversation: 'Conversation',
  ConversationParticipant: 'ConversationParticipant',
  Message: 'Message',
  DeletedConversation: 'DeletedConversation',
  MessageRead: 'MessageRead'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
